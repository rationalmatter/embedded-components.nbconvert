[build-system]
requires = ["hatchling >=0.25"]
build-backend = "hatchling.build"

[project]
name = "nbconvert"
authors = [{name = "Jupyter Development Team", email = "jupyter@googlegroups.com"}]
license = {file = "LICENSE"}
description = "Converting Jupyter Notebooks"
readme = "README.md"
keywords = ["Interactive", "Interpreter", "Shell", "Web"]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
urls = {Homepage = "https://jupyter.org"}
requires-python = ">=3.7"
dependencies = [
    "beautifulsoup4",
    "bleach",
    "defusedxml",
    "importlib_metadata>=3.6;python_version<\"3.10\"",
    "jinja2>=3.0",
    "jupyter_core>=4.7",
    "jupyterlab_pygments",
    "MarkupSafe>=2.0",
    "mistune>=2.0.3,<3",
    "nbclient>=0.5.0",
    "nbformat>=5.1",
    "packaging",
    "pandocfilters>=1.4.1",
    "pygments>=2.4.1",
    "tinycss2",
    "traitlets>=5.0",
]
dynamic = ["version"]

[project.entry-points."nbconvert.exporters"]
# custom = "nbconvert.exporters:TemplateExporter"
html = "nbconvert.exporters:HTMLExporter"
slides = "nbconvert.exporters:SlidesExporter"
# latex = "nbconvert.exporters:LatexExporter"
# pdf = "nbconvert.exporters:PDFExporter"
# qtpdf = "nbconvert.exporters:QtPDFExporter"
# qtpng = "nbconvert.exporters:QtPNGExporter"
# webpdf = "nbconvert.exporters:WebPDFExporter"
markdown = "nbconvert.exporters:MarkdownExporter"
python = "nbconvert.exporters:PythonExporter"
# rst = "nbconvert.exporters:RSTExporter"
notebook = "nbconvert.exporters:NotebookExporter"
# asciidoc = "nbconvert.exporters:ASCIIDocExporter"
script = "nbconvert.exporters:ScriptExporter"

[project.optional-dependencies]
qtpng = ["pyqtwebengine>=5.15"]
qtpdf = ["nbconvert[qtpng]"]
webpdf = ["pyppeteer>=1,<1.1"]
test = [
    "pytest",
    "pytest-dependency",
    "ipykernel",
    "ipywidgets>=7",
    "pre-commit",
]
serve = ["tornado>=6.1"]
docs = [
    "myst_parser",
    "sphinx==5.0.2",
    "pydata_sphinx_theme",
    "nbsphinx>=0.2.12",
    "ipython",
    "ipykernel",
    "sphinxcontrib_spelling",
]
all = ["nbconvert[qtpdf,webpdf,test,serve,docs]"]

[project.scripts]
jupyter-nbconvert = "nbconvert.nbconvertapp:main"
jupyter-dejavu = "nbconvert.nbconvertapp:dejavu_main"

[tool.hatch.version]
path = "nbconvert/_version.py"

# Used to call hatch_build.py
[tool.hatch.build.hooks.custom]

[tool.hatch.build.targets.sdist]
artifacts = ["share/templates"]

[tool.hatch.build.targets.wheel]
exclude = [
    "nbconvert/tests/",
    "nbconvert/**/tests/",
]

[tool.hatch.build.targets.wheel.shared-data]
"share/templates" = "share/jupyter/nbconvert/templates"

[tool.hatch.envs.docs]
features = ["docs"]
[tool.hatch.envs.docs.scripts]
build = "make -C docs html SPHINXOPTS='-W'"

[tool.hatch.envs.test]
features = ["test"]
[tool.hatch.envs.test.scripts]
test = "python -m pytest -vv {args}"
nowarn = "test -W default {args}"

[tool.hatch.envs.cov]
features = ["all"]
dependencies = ["coverage", "pytest-cov"]
[tool.hatch.envs.cov.scripts]
test = "python -m pytest -vv --cov nbconvert --cov-branch --cov-report term-missing:skip-covered {args}"
nowarn = "test -W default {args}"

[tool.hatch.envs.typing]
features = ["test"]
dependencies = ["mypy>=0.990"]
[tool.hatch.envs.typing.scripts]
test = "mypy --install-types --non-interactive {args:nbconvert}"

[tool.hatch.envs.lint]
dependencies = [
  "black[jupyter]==23.1.0",
  "mdformat>0.7",
  "mdformat-gfm>=0.3.5",
  "ruff==0.0.254"
]
detached = true
[tool.hatch.envs.lint.scripts]
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
  "mdformat --check {args:docs *.md}"
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "mdformat {args:docs *.md}"
]

[tool.pytest.ini_options]
markers = "network: marks tests which require network connection"
addopts = "-raXs --durations 10 --color=yes --doctest-modules --ignore=nbconvert/tests/files/override.py --ignore=nbconvert/tests/files/jupyter_nbconvert_config.py"
testpaths = [
    "nbconvert/"
]
filterwarnings = [
    "error",
    "ignore:nbconvert.utils.lexers is deprecated as of 5.0:UserWarning",
    # https://github.com/pyppeteer/pyppeteer/issues/342
    "ignore:remove loop argument:DeprecationWarning:websockets",
    # https://github.com/mhammond/pywin32/issues/1802
    "ignore:getargs.*format is deprecated:DeprecationWarning",
    # From jupyter_client
    "ignore:unclosed <socket.socket:ResourceWarning",
    "ignore:There is no current event loop:DeprecationWarning",
    "ignore:unclosed event loop:ResourceWarning",
    # From jupyter_core
    "module:Jupyter is migrating its paths to use standard platformdirs:DeprecationWarning",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\bProtocol\\):",
"@(abc\\.)?abstractmethod",
]

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = false
pretty = true
show_error_context = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.black]
line-length = 100
skip-string-normalization = true
target-version = ["py37"]
extend-exclude = ".*notebook1.ipynb$"

[tool.ruff]
target-version = "py37"
line-length = 100
select = [
  "A", "B", "C", "DTZ", "E", "EM", "F", "FBT", "I", "ICN", "ISC", "N",
  "PLC", "PLE", "PLR", "PLW", "Q", "RUF", "S", "SIM", "T", "TID", "UP",
  "W", "YTT",
]
ignore = [
  # Q000 Single quotes found but double quotes preferred
  "Q000",
  # FBT001 Boolean positional arg in function definition
  "FBT001", "FBT002", "FBT003",
  # E501 Line too long (158 > 100 characters)
  "E501",
  # SIM105 Use `contextlib.suppress(...)`
  "SIM105",
  # T201 `print` found
  "T201",
  # N802 Function name `CreateWellKnownSid` should be lowercase
  "N802", "N803",
]
unfixable = [
  # Don't touch print statements
  "T201",
  # Don't touch noqa lines
  "RUF100",
]

[tool.ruff.per-file-ignores]
 # B011: Do not call assert False since python -O removes these calls
# F841 local variable 'foo' is assigned to but never used
# S101 Use of `assert` detected
# TID252 Relative imports from parent modules are banned
# PLR2004 Magic value used in comparison
"nbconvert/*/tests/*" = ["B011", "F841", "S101", "TID252", "PLR2004"]
"nbconvert/tests/*" = ["B011", "F841", "S101", "TID252", "PLR2004"]
# F401 'foo' imported but unused
# F403 'x' used; unable to detect undefined names
"nbconvert/*/__init__.py" = ["F401", "F403"]
"nbconvert/__init__.py" = ["F401", "F403"]
# PLR2004 Magic value used in comparison
"nbconvert/filters/ansi.py" = ["PLR2004"]

[tool.interrogate]
ignore-init-module=true
ignore-private=true
ignore-semiprivate=true
ignore-property-decorators=true
ignore-nested-functions=true
ignore-nested-classes=true
fail-under=100
exclude = ["*/tests", "docs"]
